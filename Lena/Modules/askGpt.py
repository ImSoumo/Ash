import time
from openai import OpenAI
from Lena import app
from pyrogram import Client, filters
from pyrogram.types import Message
from pyrogram.enums import ChatAction, ParseMode
from typing import Union, List

def LenaPro(commands: Union[str, List[str]]):
    return filters.command(commands,"")

LenaAi = OpenAI(api_key="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")

@app.on_message(LenaPro(["lena", "Lena"]))
@app.on_message(filters.command(["lena", "ask"]))
async def LenaAi(bot: Client, message: Message):
    
    try:
        start_time = time.time()
        if len(message.command) < 2:
            await message.reply_text(
              "**Hello ! How can i assist you today ?**"
            )
        else:
            prompt = message.text.split(' ', 1)[1]
            model = "gpt-3.5-turbo"
            response = LenaAi.chat.completions.create(
                message = [
                    {
                        "role": "user",
                        "content": prompt
                    }
                ],
                model=model
            )
            #x=resp['choices'][0]["message"]["content"]
            end_time = time.time()
            telegram_ping = str(round((end_time - start_time) * 1000, 3)) + " ᴍs"
            await message.reply_text(f"{response}", parse_mode=ParseMode.MARKDOWN)     
    except Exception as e:
        await message.reply_text(f"**Error :** `{e}` ")        


@app.on_message(filters.command("gen"))
async def LenaAi(app: Client, message: Message):
    try:
        start_time = time.time()
        if len(message.command) < 2:
            await message.reply_text(
                "**No Prompt Given !**"
            )
        else:
            prompt = message.text.split(' ', 1)[1]
            model = "dall-e-3"
            response = LenaAi.images.generate(prompt=prompt, model=model)
            #image_url = response['data'][0]['url']
            end_time = time.time()
            telegram_ping = str(round((end_time - start_time) * 1000, 3)) + " ᴍs"
            await message.reply_photo(response, caption=f"**Generated By :** [LenaAi](t.me/LenaAiBot)\n**Time Taken :** `{telegram_ping}` ",parse_mode=ParseMode.DISABLED) 
    except Exception as e:
            await message.reply_text(f"**Error : **  ` {e} `")
